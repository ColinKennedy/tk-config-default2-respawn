# Copyright (c) 2013 Shotgun Software Inc.
# 
# CONFIDENTIAL AND PROPRIETARY
# 
# This work is provided "AS IS" and subject to the Shotgun Pipeline Toolkit 
# Source Code License included in this distribution package. See LICENSE.
# By accessing, using, copying or modifying this work you indicate your 
# agreement to the Shotgun Pipeline Toolkit Source Code License. All rights 
# not expressly granted therein are reserved by Shotgun Software Inc.

# Metadata defining the behaviour and requirements for this app

# expected fields in the configuration file for this app
configuration:
    template_work:
        type: template
        fields: context, [version], [name], *
        description: A reference to a template which locates a work file on disk.
        allows_empty: True

    template_work_area:
        type: template
        description: A reference to a template which locates the work directory on
                     disk
        allows_empty: True

    template_publish:
        type: template
        fields: context, [version], [name], *
        description: A reference to a template which locates a publish file on disk.
        allows_empty: True
           
    template_publish_area:
        type: template
        description: A reference to a template which locates the publish directory on
                     disk
        allows_empty: True
           
    sg_entity_types:
        type: list
        description: "List of Shotgun Entity Types to include in the listings when
                      picking a work area."
        default_value: [Shot, Asset]
        values:
            type: shotgun_entity_type
        allows_empty: True
           
    sg_entity_type_filters:
        type: dict
        description: "Allows you to filter the entity types specified in the sg_entity_types 
                      setting. Uses shotgun API query syntax. For example, if you have specified
                      Shot as an entity type you wish to display in the sg_entity_types setting,
                      but you only want to show shots that are in progress in the task selector
                      UI, you can set this up by specifying a filter. Like this:
                      sg_entity_type_filters: {'Shot': [['sg_status_list', 'is', 'ip']]} "
                      
        default_value: {}

    sg_entity_type_extra_display_fields:
      type: dict
      description:  "Specify additional fields to display for each entity type in the task browser. 
                     Each entry in the dictionary maps an entity type to a dictionary of 'label:field'
                     name pairs.  For example, to display the name of the sequence that a shot belongs 
                     to, specify: {Shot:{Sequence: sg_sequence.Sequence.code}}"
      default_value: {}
           
    sg_task_filters:
        type: list
        description: "Allows you to filter the Tasks linked to the entities in the sg_entity_types 
                      setting. Uses shotgun API query syntax. For example, if you only want to show 
                      Tasks that are in progress in the task selector UI, you can set this up by 
                      specifying a filter. Like this:
                      sg_task_filters: [['sg_status_list', 'is', 'ip']]"            
        default_value: []
        values:
          type: shotgun_filter
        allows_empty: True

    allow_task_creation:
        type: bool
        description: Controls whether new tasks can be created from the app.
        default_value: True

    launch_change_work_area_at_startup:
        type: bool
        description: A flag whether to launch a dialog at startup for the user to select 
                     the work area. This option is not supported on all engines because of 
                     differences in the way some platforms start up. Currently, only maya 
                     nuke and 3ds Max support this option. 
        default_value: False

    launch_at_startup:
        type: bool
        description: A flag whether to launch the UI at application startup.
                     This option is not supported on all engines because of 
                     differences in the way some platforms start up. Currently, only maya 
                     nuke and 3ds Max support this option.
        default_value: False

    hook_scene_operation:
        type: hook
        parameters: [operation, file_path, context, parent_action, file_version, read_only]
        default_value: "scene_operation_{engine_name}"
        description: All the application specific scene operations (open, save etc) that 
                     the app needs to carry out are collected together in this hook.
        
    hook_copy_file:
        type: hook
        parameters: [source_path, target_path]
        default_value: copy_file
        description: Specify a hook that will be used to copy the file 'source_path' 
                     to 'target_path'.

    hook_filter_work_files:
        type: hook
        parameters: [work_files]
        default_value: filter_work_files
        description: Specify a hook that, if needed, can filter the raw list of work files found
                     for the current work area 

    hook_filter_publishes:
        type: hook
        parameters: [publishes]
        default_value: filter_publishes
        description: Specify a hook that, if needed, can filter the raw list of publishes returned
                     from Shotgun for the current Work area.
           
    file_extensions:
        type: list
        description: List of file extensions to be shown in the work files view. If
                     empty then all files that match the template will be shown.
        values:
            type: str
        allows_empty: True
        default_value: []   
  
    saveas_default_name:
      type: str
      description: The default name that gets used by when saving a work file using the
                   save-as command
      default_value: scene

    saveas_prefer_version_up:
      type: bool
      description: Control how the save-as command determines the inital name to be used.  If 
                   set to True then the name from the current scene will be used and the version 
                   incremented.  If False then a new unique name will be used and the version 
                   reset
      default_value: False

    task_extra_display_fields:
      type: list
      description: List of the fields to use to display with the task name in the task browser.
      values:
        type: str
      allows_empty: True
      default_value: []
      
    version_compare_ignore_fields:
      type: list
      description:  A list of fields that should be ignored when comparing files to
                    determine if they are different versions of the same file.  If 
                    this is left empty then only the version field will be ignored.
                    Care should be taken when specifying fields to ignore as Toolkit 
                    will expect the version to be unique across files that have 
                    different values for those fields and will error if this isn't the
                    case.
      values:
        type: str
      allows_empty: True
      default_value: []

# the Shotgun fields that this app needs in order to operate correctly
requires_shotgun_fields:

# More verbose description of this item 
display_name: "Manage your Work Files"
description: "Using this app you can change the current work area and 
              browse work files and publishes.  The app additionally 
              provides 'Save As' and 'Change Version' commands for 
              managing work files"
              
# Required minimum versions for this item to run
requires_shotgun_version:
requires_core_version: "v0.16.31"
requires_engine_version:

# the engines that this app can operate in:
supported_engines: 

# the frameworks required to run this app
frameworks:
    - {"name": "tk-framework-widget", "version": "v0.2.x"}
    - {"name": "tk-framework-shotgunutils", "version": "v4.x.x"}
    
