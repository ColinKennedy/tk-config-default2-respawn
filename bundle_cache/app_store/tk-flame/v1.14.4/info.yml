# Copyright (c) 2014 Shotgun Software Inc.
# 
# CONFIDENTIAL AND PROPRIETARY
# 
# This work is provided "AS IS" and subject to the Shotgun Pipeline Toolkit 
# Source Code License included in this distribution package. See LICENSE.
# By accessing, using, copying or modifying this work you indicate your 
# agreement to the Shotgun Pipeline Toolkit Source Code License. All rights 
# not expressly granted therein are reserved by Shotgun Software Inc.

# Metadata defining the behaviour and requirements for this engine

# expected fields in the configuration file for this engine
configuration:
    
    debug_logging:
        type: bool
        description: Controls whether debug messages should be emitted to the logger
        default_value: False

    project_switching:
        type: bool
        description: Hint about the possibility to switch project
        default_value: False

    project_startup_hook:
        type: hook
        default_value: "{self}/project_startup.py"
        description: Contains the logic for determining and creating the workspace and 
                     users to use when launching into a Flame project. 

    backburner_hooks:
        type: hook
        default_value: "{self}/backburner_hooks.py"
        description: Contains the Backburner background job logic

    flame_batch_publish_type:
        type: tank_type
        description: The publish type associated with Flame batch scripts. This parameter is used
                     to help the Flare launch process auto-load a batch script from Shotgun at startup.
        default_value: "Flame Batch File"
    
    backburner_manager:
        type: str
        default_value: ""
        description: The host where the backburner manager is located. All backburner
                     jobs generated by the flame engine will be dispatched to this server.
                     This setting is only supported on Flame 2016.1 and above. If this
                     value is not specified, the system default will be used.
    
    backburner_shared_tmp:
        type: str
        default_value: "/tmp"
        description: A folder where the Flame engine can put temporary files. This folder 
                     needs to be accessible from all backburner nodes, so if you are running
                     a larger backburner setup, this path must be some sort of shared network
                     location. 

    backburner_servers:
        type: str
        default_value: ""
        description: Comma separated list of servers to use when submitting a backburner job.
                     (Ignored if a group is used)

    backburner_server_group:
        type: str
        default_value: ""
        description: The group name of the servers to use when submitting a backburner job.


    generate_thumbnails:
        type: bool
        default_value: True
        description: Generate thumbnails for assets exported from Flame when submitting to Shotgun.

    thumbnails_preset_path:
        type: str
        default_value: "Generate Thumbnail.xml"
        description: Path to the preset to use to generate thumbnails. If a relative path
                     is passed, the path to the application specific presets for Shotgun will
                     be prepended (/opt/Autodesk/presets/<version>/export/presets/shotgun/file_sequence).
                     This setting only apply from Flame 2019.1 and above.

    generate_previews:
        type: bool
        default_value: True
        description: Generate preview for assets exported from Flame when submitting to Shotgun.
                     Not all Shotgun entities supports preview and the code will fallback on thumbnail
                     for entities that do not support it.

    previews_preset_path:
        type: str
        default_value: "Generate Preview.xml"
        description: Path to the preset to use to generate previews. If a relative path
                     is passed, the path to the application specific presets for Shotgun will
                     be prepended (/opt/Autodesk/presets/<version>/export/presets/shotgun/movie_file).
                     This setting only apply from Flame 2019.1 and abve.


    generate_local_movies:
        type: bool
        default_value: True
        description: Global switch to allow or not the generation an higher quality movies
                     file that will not be uploaded to shotgun but can be used by client applications
                     that do not want or cannot read original exported media from Flame.
                     This is currently only used by tk-flame-export.

    local_movies_preset_path:
        type: str
        default_value: "Generate Local Movie.xml"
        description: Path to the preset to use to generate local movies. If a relative path
                     is passed, the path to the application specific presets for Shotgun will
                     be prepended (/opt/Autodesk/presets/<version>/export/presets/shotgun/movie_file).
                     This setting only apply from Flame 2019.1 and above.


    bypass_server_transcoding:
        description: Try to bypass the Shotgun server side transcoding for thumbnail generation if possible.
                     This will upload the preview quicktime as is and will not generate a webm,
                     meaning that playback will not be supported on all browsers.
                     This will also disable playable movie preview and film strip generation.
                     For more information about this option, please see the documentation.
        type: bool
        default_value: False


    media_path_root:
        description: Default root directory of media for versions created by batch setup created
                     by the loader. Can be overriden by the environment variable SHOTGUN_FLAME_MEDIA_PATH_ROOT.
                     If no value is defined, rendering write file nodes will fails.
        type: str
        default_value: ""


    use_builtin_plugin:
        type: bool
        description: Whether to prepare the launch of Flame to make use of its builtin Toolkit
                     plugin or not. If false, the classic-style Toolkit integration will be
                     initialized when Flame is launched.
        default_value: False

    run_at_startup:
        type: list
        description: "Controls what apps will run on startup.  This is a list where each element
                     is a dictionary with two keys: 'app_instance' and 'name'.  The app_instance
                     value connects this entry to a particular app instance defined in the
                     environment configuration file.  The name is the menu name of the command
                     to run when flame starts up.  If name is '' then all commands from the
                     given app instance are started."
        allows_empty: True
        default_value: []
        values:
            type: dict
            items:
                name: { type: str }
                app_instance: { type: str }

    context_menu:
        type: list
        description: "Controls the commands that show up in Flame's context menu. This is a list
                     where each element is a dictionary with three keys: 'app_instance', 'name' and 'display_name'.
                     The app_instance value connects this entry to a particular app instance defined
                     in the environment configuration file.  The name value is name of the registered command in the
                     engine. The display_name value is the name that Flame should show in the menu.
                     If name is '' then all commands from the given app instance are started.
                     If display_name is not present, name will be used instead"
        allows_empty: True
        default_value: []
        values:
            type: dict
            items:
                name: { type: str }
                app_instance: { type: str }
               #display_name: { type: str } (optional)

# the Shotgun fields that this engine needs in order to operate correctly
requires_shotgun_fields:

# More verbose description of this item 
display_name: "Shotgun Engine for Flame"
description: "Shotgun Integration in Flame"

# Required minimum versions for this item to run
requires_shotgun_version:
requires_core_version: "v0.18.45"

